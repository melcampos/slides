# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
#bind-key C-a last-window

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000

#setw -g mode-keys vi
#setw -g mode-mouse on
setw -g monitor-activity on

# Start numbering at 1
#set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-left ""
set -g status-right "#[fg=green]#H"

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Arrow key window switching
bind-key -n S-Left previous-window
bind-key -n S-Right next-window

# Nicer window moving
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# THEME
set-window-option -g status-bg colour240
set-window-option -g status-fg colour250
# Highlight active window
set-window-option -g window-status-current-bg colour250
set-window-option -g window-status-current-fg black

# new windows/splits keep current path
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

